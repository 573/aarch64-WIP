on: [push]

jobs:
  aarch64_job:
    runs-on: ubuntu-latest
    name: Build on aarch64 
    steps:
      - uses: actions/checkout@v2.1.0
      - uses: cachix/install-nix-action@v10
      - run: |
         ARCH=$1
         DISTRO=$2
         COMMANDS=$3
         COMMANDS="${COMMANDS//[$'\t\r\n']+/;}" #Replace newline with ;
         ADDITIONAL_ARGS=$4
         DEBIAN_FRONTEND=noninteractive
         # Install support for new archs via qemu
         # Platforms: linux/amd64, linux/arm64, linux/riscv64, linux/ppc64le, linux/s390x, linux/386, linux/arm/v7, linux/arm/v6
         sudo apt-get update -q -y && sudo apt-get install -q -y qemu qemu-system-arm qemu-efi binfmt-support qemu-user-static
         mkdir -p ~/.config/nix
         echo system-features = aarch64-linux arm-linux >> ~/.config/nix/nix.conf
      - uses: cachix/cachix-action@v6
        with:
          name: 573-bc
          signingKey: '${{ secrets.CACHIX_SIGNING_KEY }}'
          # Only needed for private caches
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      # This gets everything from cache, but doesn't build neuron (yet).
      - name: nix-store-version
        id: runcmd
        run: |
          $(readlink $(type -f nix-store)) --version
          echo ::set-output name=storeversion::$($(readlink $(type -f nix-store)) --version)
          #nix-build "<nixpkgs>" -A pkgs.hello --argstr system aarch64-linux --extra-platforms aarch64-linux --argstr arch aarch64
          # https://www.reddit.com/r/NixOS/comments/7szcax/installing_nix_on_the_jolla_1_sailfish_os_armv7/
          nix-build '<nixpkgs>' --arg crossSystem '(import <nixpkgs/lib>).systems.examples.aarch64-multiplatform' -A hello
          #nix-build "<nixpkgs>" -A pkgsCross.aarch64-multiplatform.hello
      - name: Get the output
        run: |
            echo "The nix-store-version output was ${{ steps.runcmd.outputs.storeversion }}"
      - name: Bundle up
        if: ${{ runner.os == 'Linux' }}
        run: |
          git clone https://github.com/srid/nix-bundle.git tmp/nix-bundle
          cd tmp/nix-bundle
          ./nix-bundle.sh '(import ../.. {})' /bin/hello > ../../hello-aarch64-bundle
          cd -
          mkdir ~/bundle
          cp hello-aarch64-bundle ~/bundle/hello
          chmod a+x hello-aarch64-bundle ~/bundle/hello
      - name: Upload bundle as artifact 
        uses: actions/upload-artifact@v2
        if: ${{ runner.os == 'Linux' }}
        with:
          name: hello-bundle-aarch64
          path: ~/bundle/hello
      - name: Get current date and time
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%d %H:%M:%S')"
      - name: Upload bundle to nightly release
        uses: meeDamian/github-release@v2.0.3
        if: ${{ runner.os == 'Linux' }}
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: nightly
          name: Hello nightly
          body: >
            Current build of Neuron from `${{ env.MAINLINE }}` branch -
            last updated on ${{ steps.date.outputs.date }}.
          prerelease: true
          files: hello-aarch64-bundle
          gzip: false
          allow_override: true
